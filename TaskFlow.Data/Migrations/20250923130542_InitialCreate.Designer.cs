// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskFlow.Data;

#nullable disable

namespace TaskFlow.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250923130542_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskFlow.Models.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Looks good so far!",
                            CreatedAt = new DateTime(2025, 9, 23, 13, 5, 41, 249, DateTimeKind.Utc).AddTicks(9370),
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "We should adjust the deadline",
                            CreatedAt = new DateTime(2025, 9, 23, 13, 5, 41, 249, DateTimeKind.Utc).AddTicks(9373),
                            TaskItemId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Backend authentication pending",
                            CreatedAt = new DateTime(2025, 9, 23, 13, 5, 41, 249, DateTimeKind.Utc).AddTicks(9375),
                            ProjectId = 2
                        });
                });

            modelBuilder.Entity("TaskFlow.Models.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimatedTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deadline = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTime = 200,
                            Name = "Website Redesign",
                            ProjectCode = "PRJ001"
                        },
                        new
                        {
                            Id = 2,
                            Deadline = new DateTime(2025, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTime = 350,
                            Name = "Mobile App Development",
                            ProjectCode = "PRJ002"
                        },
                        new
                        {
                            Id = 3,
                            Deadline = new DateTime(2026, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedTime = 500,
                            Name = "Internal CRM System",
                            ProjectCode = "PRJ003"
                        });
                });

            modelBuilder.Entity("TaskFlow.Models.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedTime")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deadline = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create wireframes and mockups",
                            EstimatedTime = 40,
                            Progress = 50,
                            ProjectId = 1,
                            Status = 2,
                            Title = "Design new homepage"
                        },
                        new
                        {
                            Id = 2,
                            Deadline = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Add JWT authentication in backend",
                            EstimatedTime = 60,
                            Progress = 0,
                            ProjectId = 2,
                            Status = 0,
                            Title = "Implement login feature"
                        },
                        new
                        {
                            Id = 3,
                            Deadline = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Plan and implement core tables",
                            EstimatedTime = 30,
                            Progress = 100,
                            ProjectId = 3,
                            Status = 3,
                            Title = "Database schema design"
                        });
                });

            modelBuilder.Entity("TaskFlow.Models.Models.Comment", b =>
                {
                    b.HasOne("TaskFlow.Models.Models.Project", "Project")
                        .WithMany("Comments")
                        .HasForeignKey("ProjectId");

                    b.HasOne("TaskFlow.Models.Models.TaskItem", "TaskItem")
                        .WithMany("Comments")
                        .HasForeignKey("TaskItemId");

                    b.Navigation("Project");

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("TaskFlow.Models.Models.TaskItem", b =>
                {
                    b.HasOne("TaskFlow.Models.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TaskFlow.Models.Models.Project", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskFlow.Models.Models.TaskItem", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
